#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <fcntl.h>

#define BUFFER_SIZE 1024

int main() {
    int file_descriptor;
    ssize_t bytes_read, bytes_written;
    char buffer[BUFFER_SIZE];

    // Create a new file
    file_descriptor = creat("example.txt", 0666);
    if (file_descriptor == -1) {
        perror("Error creating file");
        exit(EXIT_FAILURE);
    }

    printf("File created successfully!\n");

    // Open the file for writing
    file_descriptor = open("example.txt", O_WRONLY);
    if (file_descriptor == -1) {
        perror("Error opening file");
        exit(EXIT_FAILURE);
    }

    // Write to the file
    bytes_written = write(file_descriptor, "Hello, world!\n", 14);
    if (bytes_written == -1) {
        perror("Error writing to file");
        exit(EXIT_FAILURE);
    }

    printf("Data written to file successfully!\n");

    // Close the file
    if (close(file_descriptor) == -1) {
        perror("Error closing file");
        exit(EXIT_FAILURE);
    }

    // Open the file for reading
    file_descriptor = open("example.txt", O_RDONLY);
    if (file_descriptor == -1) {
        perror("Error opening file for reading");
        exit(EXIT_FAILURE);
    }

    // Read from the file
    bytes_read = read(file_descriptor, buffer, BUFFER_SIZE);
    if (bytes_read == -1) {
        perror("Error reading from file");
        exit(EXIT_FAILURE);
    }

    printf("Data read from file: %s\n", buffer);

    // Close the file
    if (close(file_descriptor) == -1) {
        perror("Error closing file");
        exit(EXIT_FAILURE);
    }

    return 0;
}
